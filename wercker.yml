--- 
box: golang
build: 
  steps: 
    - 
      setup-go-workspace: 
        package-dir: github.com/rossmcq/gamefrontendmicro
    - 
      script: 
        code: env
        name: env
    - 
      script: 
        code: |
            
            cd $WERCKER_SOURCE_DIR
            
            go version

            go get github.com/olekukonko/tablewriter

            go get github.com/cloudnativego/gogo-engine

            go get github.com/unrolled/render

            go get github.com/urfave/negroni

            go get github.com/gorilla/mux

            echo $WERCKER_SOURCE_DIR
            
            export PATH=$WERCKER_SOURCE_DIR/bin:$PATH

            curl https://glide.sh/get | sh

        name: "go get"
    - 
      script: 
        code: |
            
            go build
        name: "go build"
    - 
      script: 
        code: |
            
            go test -v $(glide novendor)
        name: "go test"
    - 
      script: 
        code: |
            
            cp -R ./ ${WERCKER_OUTPUT_DIR}
        name: "copy files to wercker output"
deploy: 
  steps: 
    - 
      internal/docker-push: 
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        cmd: /pipeline/source/gamefrontendmicro
        port: "1212"
        registry: "https://registry.hub.docker.com"
        repository: rosspl2/gamefrontendmicro
        tag: latest
dev: 
  steps: 
    - 
      setup-go-workspace: 
        package-dir: github.com/rossmcq/gamefrontendmicro
    - 
      script: 
        code: env
        name: env
    - 
      script: 
        code: |
            
            cd $WERCKER_SOURCE_DIR
            
            go version

            go get github.com/olekukonko/tablewriter

            go get github.com/cloudnativego/gogo-engine

            go get github.com/unrolled/render

            go get github.com/urfave/negroni

            go get github.com/gorilla/mux

            echo $WERCKER_SOURCE_DIR
            
            export PATH=$WERCKER_SOURCE_DIR/bin:$PATH

            curl https://glide.sh/get | sh
            
        name: "go get"
    - 
      internal/watch: 
        code: "go run main.go"
        reload: true
